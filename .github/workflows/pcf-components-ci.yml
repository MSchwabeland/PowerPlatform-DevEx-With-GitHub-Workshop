# This is a GitHub Actions workflow for Continuous Integration (CI) of PCF components.
# The workflow is triggered on every push only under the "src/pcf-components" folder to the main branch.
# The workflow runs on a Windows runner and uses the "Sandbox" environment.
# 
# The workflow performs the following steps:
# 0. Enable git long paths: It enables long paths in git to avoid the "Filename too long" error.
# 1. Setup: It sets up the required environment with the necessary versions of Node.js and npm.
# 3. List the changed files under the "src/pcf-components" folder in the latest commit and identify the parent folder of the changed files to get the name of changed PCF component and put it in the environment variable.
# 3. Install Dependencies: It installs all the dependencies defined in the package.json file.
# 4. Build: It builds the PCF components located under the "src/pcf-components" folder using the 'npm run build' command - we can have multiple PCF components implemented there.
# 5. Test: It runs unit tests using the 'npm test' command.
# 6. Setup msbuild: Using the microsoft/setup-msbuild@v2 GitHub action to install msbuild on the runner.
# 7. Pack solution: Run msbuild with Release configuration after installing it on the "src/solutions/PCFComponents" folder to create the solution zip file.
# 8. Store the packed solution zip file as an artifact.
# 9. Install the Power Platform CLI using the "microsoft/powerplatform-actions/actions-install@main" GitHub action.
# 10. Deploy: It deploys the solution zip file to the Dataverse environment using the "microsoft/powerplatform-actions/import-solution@main" GitHub action leveraging the "TENANT_ID", "CLIENT_ID" and "CLIENT_SECRET" GitHub environment secrets and the "DATAVERSE_ENVIRONMENT_URL" environment variable.

name: PCF Components CI

on:
  push:
    branches:
      - main
    paths:
      - 'src/pcf-components/**'

jobs:

  build:
    runs-on: windows-latest
    env:
      PCF_COMPONENT_NAME: ''
      PCF_COMPONENTS_PATH: 'src/pcf-components'
      SOLUTION_PATH: 'src/solutions/PCFComponents'
    steps:
      - name: Enable git long paths
        run: git config --global core.longpaths true

      - name: Setup
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: List changed files
        id: list-changed-files
        run: echo "::set-output name=changed-files::$(git diff --name-only ${{ github.sha }} ${{ github.sha }}^ -- ${{ env.PCF_COMPONENTS_PATH }})"

      - name: Identify PCF component name
        id: identify-pcf-component-name
        run: echo "::set-env name=PCF_COMPONENT_NAME::$(echo ${{ steps.list-changed-files.outputs.changed-files }} | cut -d'/' -f3)"

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v2

      - name: Pack solution
        run: msbuild ${{ env.SOLUTION_PATH }}/PCFComponents.sln /t:Rebuild /p:Configuration=Release

      - name: Store packed solution
        uses: actions/upload-artifact@v2
        with:
          name: PCFComponentsSolution
          path: ${{ env.SOLUTION_PATH }}/bin/Release/PCFComponents.zip

      - name: Install Power Platform CLI
        uses: microsoft/powerplatform-actions/actions-install@main

      - name: Deploy
        uses: microsoft/powerplatform-actions/import-solution@main
        with:
          environmentUrl: ${{ secrets.DATAVERSE_ENVIRONMENT_URL }}
          clientId: ${{ secrets.CLIENT_ID }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          tenantId: ${{ secrets.TENANT_ID }}
          solutionFile: ${{ env.SOLUTION_PATH }}/bin/Release/PCFComponents.zip

The workflow is triggered on every push only under the "src/pcf-components" folder to the main branch. The workflow runs on a Windows runner and uses the "Sandbox" environment. The workflow performs the following steps:
